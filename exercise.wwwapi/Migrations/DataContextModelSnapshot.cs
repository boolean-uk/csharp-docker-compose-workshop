// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using exercise.wwwapi.Data;

#nullable disable

namespace exercise.wwwapi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("exercise.wwwapi.DataModels.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Band")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("artist");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("album");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Band = "Empty Reflection",
                            Title = "Awe"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("integer")
                        .HasColumnName("albumid_fk");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("song");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Title = "Quietly Tragic"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 1,
                            Title = "Just a normal Day"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 1,
                            Title = "Live for Free"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 1,
                            Title = "Just a normal day"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 1,
                            Title = "She'd be there"
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 1,
                            Title = "Listen"
                        });
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Song", b =>
                {
                    b.HasOne("exercise.wwwapi.DataModels.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("exercise.wwwapi.DataModels.Album", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
